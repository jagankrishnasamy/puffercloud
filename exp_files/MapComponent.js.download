(function () {
  var loader = window.jacksmod.loader;
  /**/
})();

(function () {
  'use strict';
  var common = window.jacksmod.common;

  var busList = {
    "Red Line": {
      "EncodedPolyline": "yyxwFdvsiTfA_AF_@Aa@_@eAa@gAmAjAqAdA_@DQ@_@Gq@g@qC@aDh@????eBX_Ex@kAPu@D??Q?O?yE???CgD?QAK?MCMAMEUCMCMEOEOSq@UYUUUQa@SYMcAYg@U_@_@QWQYOc@KEIa@Ga@Cu@?qA???aCDc@BWV{ADYZsB@GAG?GAEAC??Ha@BKFMHO~AaB??IKGIGEGAG?I?AH???@?BAB?BABEFEFKJ]\\ABIFEDEBIDGFML??IQM]IYGSG]B_ALq@Ha@B[?UE_@?S@KBKDGh@m@x@{@HGBCDAFAH?BAFADCHEFGBCDG??BCDIDKDIBK@O@K?M?M?K@I@GBKBINSn@y@f@aAd@s@v@_AHKz@_AJOFK@GLMFI??pB}BvBAj@J\\P^f@????rBbD????z@lBB`AKd@{@bAUf@_@lDp@b@f@n@tA_B????~EmFlKqJu@wA}@k@cA@{@b@}@j@??YZk@`A]v@O`AAp@B`AH~@??D\\DEzIeInBT????V?PLnCbH^jA??TbAPn@NTNTDPJXTl@~@xB`ArB~CvH??f@zAl@xAnCrGTn@LTNf@Ff@??DNDl@@`CgAzKAJG@EDEDCHAH?F@HBHBD{@zEQb@Q`@[b@????IJc@j@INUf@Ib@Mt@EXCd@A~HJ|@d@zBDTB\\@T?tB@R?V??CpBiDB??{DC????sEBqEABc@Bu@@S??@sDB{AAsAASG]M]MOOKSIUC??S@WHOLGFOXGTEX?jJ?????tB??uA?uB?K?[AO???SOECACCCCEAICGEg@@iC?mDAaG???yHCQZK|ADd@A??|@??{@qBBy@EWE@~@[JKOUC{DB{JnBW@WCg@QYSQQ_@s@Mi@I_A?_C?}DHe@@I?CxE?Z???D?v@EjAQrDu@pB]??~Ci@pCAp@f@t@bCVZRLh@Dd@Gr@m@",
      "Color": "#800",
      "RouteId": "15"
    },
    "Blue Line": {
      "EncodedPolyline": "yyxwFdvsiTjAcAF_@EYaAoCyClCs@Jc@Iq@g@qC@aDh@????gBTwD|@??s@JYDy@DiGC@nKPhAd@x@\\\\d@RfAHrJqBpCC??t@?JBHNBR?`VClCOzAzN?FgA@W?M??DiGAW?cAAOG[M[IOSOSIUC????U@SHQLU`@ITEV?N?|I?????pBxQ?????vJ?@kE????@_BEc@a@wAQmAAcG?k@D_AD_@Fc@H[^{@\\o@f@{@??Vg@Ts@~@wEHCFIBU?KCGEI`@uDFOTqBRqB@]BeAIeB????[uAk@_BkG_O????sGaOkAwAc@mByDgJ??MSIm@?mAkAv@m@uAu@c@]Gu@BqBhA????a@^iAxBQrBXxC_FlF????uA~Ag@o@q@c@f@aEhAwAFSB}@Om@????_@}@cC{D????_@g@]Qk@KwB@_BhBg@j@GRq@v@????yAbBmAtBcArAG`@Ap@E\\KVOTKHQHE@SBOH????oBpBEZDhA[nBC~@p@xBZYNI`AeADYNAH@FDPTMP??wA|AOb@Af@eAvHBjG`@nBl@`Ab@ZzCjA|@bAd@nALr@Dj@AtDhGBtAIp@M??vD}@fBS??`Dk@pCAp@f@R|@Z~@^d@n@Rn@Kt@m@",
      "Color": "#008",
      "RouteId": "16"
    },
    "Orange Line": {
      "EncodedPolyline": "czxwFlvsiTf@a@^_@DEDG@C@EBI?I?KCOK[k@qAGKGGGD??UPCBeA~@i@d@C@C@OFA???Y@G?GAE?GAKAOQOMOGYCc@?Y?[@]@uATQBe@HM@??w@N{@NSD_Dn@??Gm@AKCKGYIUKWSg@IOKQIOKIGGKEKEMIIGIGGKKQGMGMGOYu@Sk@??RQz@{@t@{@h@q@vAsBHKXa@j@y@`CiDzAwBl@u@`CyC`AcAh@WPIFGDEFKDINc@BK@IBS??L?L?`@A`@GXGTIJE~BgAl@WXOZMl@Ub@KjAUj@MRCt@O??VGUUSKAAMOMYKWGWI[I]a@wAm@wA??AE_BcEQMIm@Ac@?M??@[??kAv@??c@eAIOQKc@W]G]?UDGB]Ja@Vm@`@??C@[Zk@`AKRQb@Il@ERAT?R?P?TB\\HbA???BDX??XYZ[TUTS\\[`EoD\\_@??h@Hv@H??F@^???PL~AbE@D??l@vA`@vAH\\HZFVJVLXLN@@??DPJVu@NSBk@LkATc@Jm@T[LYNm@V_CfAKDUHYFa@Fa@@M?M???CRAHCJOb@EHGJEDGFQHi@VaAbAk@r@??uAdBm@t@{AvBaChDk@x@Y`@IJwArBi@p@u@z@{@z@SP??Rj@Xt@FNFL??????FLJPFJHFHFLHJDJDFFJHHNJPHNRf@JVHTFXBJ@JFl@??~Co@REz@Ov@M??LCd@IPCtAU\\AZAX?b@?XBNFNLNPXv@BDV~@FFDHFFDFFDFFJBL@N?RCJCJG^YFG",
      "Color": "#ffa500",
      "RouteId": "46"
    },
    "Purple Line": {
      "EncodedPolyline": "ubxwFtkriTqGcOnKmC??jDu@RPr@JjBr@vB~A~B|BnBeD~AqBpFgEqAaDcDmE????sIgKqCgDaCmB??}C{Bk@a@kAaAWYm@aA??}@sAOUgAwAGGAAC?A?IO{@oAsAqBIS??AQEO~FmFbFuE??\\dAtBfG`@nA??HXh@i@??rAqAVOXMv@Ol@@^DXJ|@f@tC`E??fBbCb@t@d@tAd@bBTIt@KtHE@?`GA????pG@????d@?A|c@????@jP???fI????Atr@kL?OHmK???eI?e@KaI@aAGk@IwAe@OIII?ICGEK`@uDFSf@aFB[@gAIcB??Ic@Qq@aA}BsB_FaC_G",
      "Color": "#808",
      "RouteId": "19"
    }
  };

  var stationList = {

    "BP Tower": {
    lat: 40.754978,
    lng: -111.894659
    },
    "15E 400S": {
    lat: 40.760881,
    lng: -111.890487
    },
    "Orpheum": {
    lat: 40.766575,
    lng: -111.889598
    },
    "270 Main": {
    lat: 40.763305,
    lng: -111.891922
    },
    "363S 500E": {
    lat: 40.761543,
    lng: -111.876426
    },
    "SLC Eng": {
    lat: 40.761505,
    lng: -111.884867
    },
    "SL Library": {
    lat: 40.760157,
    lng: -111.884890
    },

    "Salt Palace, E": {
    lat: 40.767211,
    lng: -111.894350
    },

    "Salt Palace, W": {
    lat: 40.767647,
    lng: -111.898728
    },

    "Kearns, E": {
    lat: 40.766204,
    lng: -111.891348
    },

    "Tower 102": {
    lat: 40.766787,
    lng: -111.885938
    },

    "West Village": {
    lat: 40.751169,
    lng: -111.836711
    },

    "East Village": {
    lat: 40.751528,
    lng: -111.827398
    },

    "Geology": {
    lat: 40.766797,
    lng: -111.847979
    },

    "Behavioral": {
    lat: 40.761422,
    lng: -111.845378
    },

    "Friendship Manor": {
    lat: 40.757880,
    lng: -111.853134
    },

    "Dentistry": {
    lat: 40.757290,
    lng: -111.831570
    },

    "Shoreline Ridge": {
    lat: 40.766505,
    lng: -111.829660
    },

    "Hospital": {
    lat: 40.771522,
    lng: -111.836459
    },

    "USTAR": {
    lat: 40.768894,
    lng: -111.841627
    },

    "Honors": {
    lat: 40.763400,
    lng: -111.836553
    },

    "Bryant Middle School": {
    lat: 40.767962,
    lng: -111.868927
    },

    "SL Regional Medical": {
    lat: 40.767481,
    lng: -111.860068
    }


  };

  var posList = ["Purple Line", "Geology", "Red Line"];
/*
    { lat: 40.768732, lng: -111.845806 },
    { lat: 40.766193, lng: -111.847778 },
    { lat: 40.766606, lng: -111.851784 },
    { lat: 40.770917, lng: -111.847141 },
    { lat: 40.769350, lng: -111.854867 },
  ];
*/

  var posIndex = 0;

  var MapComponent = common.ComponentQuery.extend({

    initialize: function () {
      this.gmap = null;
      this.markers = {};
      this.infos = {};
      this.paths = {};
      this.interval = window.setInterval(_.bind(this.updateMarkers, this),
					 1000);
      this.markerUpdates = [];
    },

    render: function () {
      if (! this.rendered)
      {
	this.$el = $(`<div id="gmap" style="width: 100%; height: 100%; position: absolute; top:0; left:0; z-index: 0; display: none"></div>`);
      }
      return this.superRender();
    },

    update: function (state) {
      if (state)
      {
	if (state.shown)
	{
	  this.show();
	  this.updateMap(state);
	}
	else
	{
	  this.hide();
	}
      }
    },

    updateMap: function (state) {
      if (! this.gmap)
      {
	var mapPos = {
	  center: { lat: 40.7647337, lng: -111.863586 },
	  zoom: 12
	}
	this.gmap = new google.maps.Map(this.$el[0], mapPos);
	this.gmap.controls[google.maps.ControlPosition.TOP_CENTER].push(this.createControl());
      }
      if (state.graph)
      {
	var changed = false;
	_.each(state.graph.nodes, function (node) {
	  if (this.markers[node.id] === undefined)
	  {
	    changed = true;
	    this.infos[node.id] = new google.maps.InfoWindow({
	      content: this.infoContent(node)
	    });
	    this.markers[node.id] = new google.maps.Marker({
	      position: this.getPos(node.bindsite),
	      map: this.gmap,
	      title: node.name,
	      icon: this.getIcon(node.bindsite)
	    });
	    this.initMarker(node.id, node.bindsite);
	    this.paths[node.id] = this.getPath(node.bindsite, this.gmap);
	    this.markers[node.id].addListener('click', function () {
	      this.infos[node.id].open(this.gmap, this.markers[node.id]);
	    }.bind(this));

	    posIndex++;
	    if (posIndex >= posList.length)
	    {
	      posIndex = 0;
	    }
	  }
	}.bind(this));
	if (changed)
	{
	  this.updateMarkers();
	}
      }
    },

    createControl: function ()
    {
      var result = $('<div title="Click to see Graph View" class="map-hide-outer"><div>Graph</div></div>');
      result.find('div').on('click', function () {
	this.trigger('switch-to-graph');
      }.bind(this));
      return result[0];
    },

    getPos: function (id)
    {
      var result = undefined;//{ lat: 40.768732, lng: -111.845806 };
      if (stationList[id])
      {
	result = {
	lat: stationList[id].lat,
	lng: stationList[id].lng
	};
      }
      return result;
    },

    getIcon: function (id)
    {
      if (busList[id])
      {
	return {
	  url: 'https://www.emulab.net/protogeni/jacksmod/stable/images/bus2.png',
	  size: new google.maps.Size(32, 21),
	  origin: new  google.maps.Point(0, 0),
	  anchor: new google.maps.Point(16, 11)
	};
      }
      else
      {
	return {
	  url: 'https://www.emulab.net/protogeni/jacksmod/stable/images/base-station2.png',
	  size: new google.maps.Size(32, 32),
	  origin: new google.maps.Point(0, 0),
	  anchor: new google.maps.Point(15, 29)
	};
      }
    },

    getPath: function (id, gmap)
    {
      var result;
      if (busList[id])
      {
	var gpath = google.maps.geometry.encoding.decodePath(busList[id].EncodedPolyline);
	result = new google.maps.Polyline({
	  map: gmap,
	  path: gpath,
	  strokeColor: busList[id].Color,
	  strokeWeight: 2,
	  strokeOpacity: 1.0
	  });
      }
      return result;
    },

    infoContent: function (node)
    {
      var result = ``;
      result += `<h4>${node.name}</h4>`;
      if (node.type)
      {
	result += `<p><b>Type:</b> ${node.type}</b></p>`;
      }
      if (node.hardware)
      {
	result += `<p><b>Hardware:</b> ${node.hardware}</b></p>`;
      }
      if (node.image)
      {
	var imageName = common.util.imageDisplay(node.image);
	result += `<p><b>Image:</b> ${imageName}</b></p>`;
      }
      if (node.routable)
      {
	result += `<p>Has routable IP</p>`;
      }
      return result;
    },

    initMarker: function (id, bindsite)
    {
      var marker = this.markers[id];
      if (busList[bindsite])
      {
	var route = busList[bindsite].RouteId;
	var vehicleId = null;
	var update = function () {
	  $.get('shuttle.php?RouteId=' + route)
	    .success(function (value) {
	      if (value)
	      {
		var vehicleList = JSON.parse(value);
		if (vehicleList.length > 0)
		{
		  if (vehicleId === null)
		  {
		    vehicleId = vehicleList[0].VehicleID;
		  }
		  _.each(vehicleList, function (vehicle) {
		    if (vehicle.VehicleID === vehicleId)
		    {
		      marker.setPosition({lat: vehicle.Latitude,
					  lng: vehicle.Longitude});
		    }
		  });
		}
	      }
	    });
	};
	this.markerUpdates.push(update);
      }
    },

    updateMarkers: function ()
    {
      _.each(this.markerUpdates, function (f) {
	f();
      }.bind(this));
    }

  });

  common.component.MapComponent = MapComponent;
})();
